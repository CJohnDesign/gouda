rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Songs collection - read-only for authenticated users
    match /songs/{songId} {
      allow read: if request.auth != null;
      allow write: if false;
    }

    // Song requests collection - authenticated users can create and read their own requests
    match /songRequests/{requestId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.resource.data.requestedBy == request.auth.uid;
      allow update, delete: if request.auth != null && resource.data.requestedBy == request.auth.uid;
    }

    // Playlists collection
    match /playlists/{playlistId} {
      allow read: if request.auth != null && (
        resource.data.isPublic == true || 
        resource.data.ownerId == request.auth.uid ||
        exists(/databases/$(database)/documents/playlistAccess/$(playlistId)/users/$(request.auth.uid))
      );
      
      allow create: if request.auth != null && 
        request.resource.data.ownerId == request.auth.uid;
      
      allow update: if request.auth != null && (
        resource.data.ownerId == request.auth.uid ||
        (exists(/databases/$(database)/documents/playlistAccess/$(playlistId)/users/$(request.auth.uid)) &&
         get(/databases/$(database)/documents/playlistAccess/$(playlistId)/users/$(request.auth.uid)).data.role == 'editor')
      ) && request.resource.data.ownerId == resource.data.ownerId;
      
      allow delete: if request.auth != null && 
        resource.data.ownerId == request.auth.uid;
    }

    // User's playlists subcollection
    match /users/{userId}/playlists/{playlistId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // User's profile
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Playlist access collection
    match /playlistAccess/{playlistId}/users/{userId} {
      allow read: if request.auth != null && (
        request.auth.uid == userId ||
        get(/databases/$(database)/documents/playlists/$(playlistId)).data.ownerId == request.auth.uid
      );
      
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/playlists/$(playlistId)).data.ownerId == request.auth.uid;
    }

    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
}